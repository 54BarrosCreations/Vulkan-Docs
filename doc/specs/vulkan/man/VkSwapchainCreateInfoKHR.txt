// Copyright (c) 2014-2016 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

VkSwapchainCreateInfoKHR(3)
===========================

Name
----
VkSwapchainCreateInfoKHR - Structure specifying parameters of a newly created swapchain object

C Specification
---------------

// refBegin VkSwapchainCreateInfoKHR - Structure specifying parameters of a newly created swapchain object

The sname:VkSwapchainCreateInfoKHR structure is defined as:

include::../api/structs/VkSwapchainCreateInfoKHR.txt[]


Members
-------

  * pname:sType is the type of this structure and must: be
    ename:VK_STRUCTURE_TYPE_SWAPCHAIN_CREATE_INFO_KHR.
  * pname:pNext is `NULL` or a pointer to an extension-specific structure.
  * pname:flags is reserved for future use, and must: be zero.
  * pname:surface is the surface that the swapchain will present images to.
  * pname:minImageCount is the minimum number of presentable images that the
    application needs. The platform will either create the swapchain with at
    least that many images, or will fail to create the swapchain.
  * pname:imageFormat is a slink:VkFormat that is valid for
    swapchains on the specified surface.
  * pname:imageColorSpace is a slink:VkColorSpaceKHR that is valid for
    swapchains on the specified surface.
  * pname:imageExtent is the size (in pixels) of the swapchain. Behavior is
    platform-dependent when the image extent does not match the surface's
    pname:currentExtent as returned by
    fname:vkGetPhysicalDeviceSurfaceCapabilitiesKHR.
  * pname:imageArrayLayers is the number of views in a multiview/stereo
    surface. For non-stereoscopic-3D applications, this value is 1.
  * pname:imageUsage is a bitfield of elink:VkImageUsageFlagBits, indicating
    how the application will use the swapchain's presentable images.
  * pname:imageSharingMode is the sharing mode used for the images of the
    swapchain.
  * pname:queueFamilyIndexCount is the number of queue families having
    access to the images of the swapchain in case pname:imageSharingMode is
    ename:VK_SHARING_MODE_CONCURRENT.
  * pname:pQueueFamilyIndices is an array of queue family indices having
    access to the images of the swapchain in case pname:imageSharingMode is
    ename:VK_SHARING_MODE_CONCURRENT.
  * pname:preTransform is a bitfield of elink:VkSurfaceTransformFlagBitsKHR,
    describing the transform, relative to the presentation engine's
    natural orientation, applied to the image content prior to presentation.
    If it does not match the pname:currentTransform value returned by
    fname:vkGetPhysicalDeviceSurfaceCapabilitiesKHR, the presentation engine
    will transform the image content as part of the presentation operation.
  * pname:compositeAlpha is a bitfield of elink:VkCompositeAlphaFlagBitsKHR,
    indicating the alpha compositing mode to use when this surface
    is composited together with other surfaces on certain window systems.
  * pname:presentMode is the presentation mode the swapchain will use. A
    swapchain's present mode determines how incoming present requests will
    be processed and queued internally.
  * pname:clipped indicates whether the Vulkan implementation is allowed
    to discard rendering operations that affect regions of the surface which
    aren't visible.
  ** If set to ename:VK_TRUE, the presentable images associated with the
     swapchain may: not own all of their pixels. Pixels in the presentable
     images that correspond to regions of the target surface obscured by
     another window on the desktop or subject to some other clipping
     mechanism will have undefined content when read back. Pixel shaders
     maynot: execute for these pixels, and thus any side affects they would
     have had will not occur.
  ** If set to ename:VK_FALSE, presentable images associated with the
     swapchain will own all the pixels they contain.
     Setting this value to ename:VK_TRUE does not guarantee any clipping
     will occur, but allows more optimal presentation methods to be used on
     some platforms.


Description
-----------

[NOTE]
.Note
====
Applications should: set this value to
ename:VK_TRUE if they do not expect to read back the content of presentable
images before presenting them or after reacquiring them and if their
pixel shaders do not have any side effects that require them to run for
all pixels in the presentable image.
====

  * pname:oldSwapchain, if not code:VK_NULL_HANDLE, specifies the
    swapchain that will be
    replaced by the new swapchain being created.  The new swapchain will: be
    a descendant of pname:oldSwapchain.  Further, any descendants of the
    new swapchain will also be descendants of pname:oldSwapchain.  Upon
    calling
    fname:vkCreateSwapchainKHR with a pname:oldSwapchain that is
    not code:VK_NULL_HANDLE, any
    images not acquired by the application may: be freed by the
    implementation, which may: occur even if creation of the new swapchain
    fails. The application must: destroy the old swapchain to free all
    memory associated with the old swapchain. The application must: wait for
    the completion of any outstanding rendering to images it currently has
    acquired at the time the swapchain is destroyed. The application can:
    continue to present any images it acquired and has not yet presented
    using the old swapchain, as long as it has not entered a state that
    causes it to return ename:VK_ERROR_OUT_OF_DATE_KHR. However, the
    application cannot: acquire any more images from the old swapchain
    regardless of whether or not creation of the new swapchain succeeds.

include::../validity/structs/VkSwapchainCreateInfoKHR.txt[]


See Also
--------

basetype:VkBool32, elink:VkColorSpaceKHR, elink:VkCompositeAlphaFlagBitsKHR, slink:VkExtent2D, elink:VkFormat, elink:VkImageUsageFlags, elink:VkPresentModeKHR, elink:VkSharingMode, elink:VkStructureType, slink:VkSurfaceKHR, elink:VkSurfaceTransformFlagBitsKHR, elink:VkSwapchainCreateFlagsKHR, slink:VkSwapchainKHR, flink:vkCreateSwapchainKHR


Document Notes
--------------

For more information, see the Vulkan Specification at URL

https://www.khronos.org/registry/vulkan/specs/1.0/xhtml/vkspec.html#VkSwapchainCreateInfoKHR

This page is extracted from the Vulkan Specification.
Fixes and changes should be made to the Specification,not directly.

include::footer.txt[]

