// Copyright (c) 2014-2016 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

vkCmdBlitImage(3)
=================

Name
----
vkCmdBlitImage - Copy regions of an image, potentially performing format conversion,

C Specification
---------------

// refBegin vkCmdBlitImage - Copy regions of an image, potentially performing format conversion,

To copy regions of a source image into a destination image, potentially
performing format conversion, arbitrary scaling, and filtering, call:

include::../protos/vkCmdBlitImage.txt[]


Parameters
----------

  * pname:commandBuffer is the command buffer into which the command will be
    recorded.
  * pname:srcImage is the source image.
  * pname:srcImageLayout is the layout of the source image subresources for
    the blit.
  * pname:dstImage is the destination image.
  * pname:dstImageLayout is the layout of the destination image subresources
    for the blit.
  * pname:regionCount is the number of regions to blit.
  * pname:pRegions is a pointer to an array of slink:VkImageBlit structures
    specifying the regions to blit.
  * pname:filter is a elink:VkFilter specifying the filter to apply if the
    blits require scaling.


Description
-----------

fname:vkCmdBlitImage mustnot: be used for multisampled source or destination
images. Use flink:vkCmdResolveImage for this purpose.

If sizes of source and destination extents do not match, scaling is
performed by applying the filtering mode specified by pname:filter
parameter. ename:VK_FILTER_LINEAR uses bilinear interpolation, and
ename:VK_FILTER_NEAREST uses point sampling. When using
ename:VK_FILTER_LINEAR, magnifying blits may: generate texel coordinates
outside of the source region. If those coordinates are outside the bounds of
the image level, the coordinates are clamped as in
ename:VK_SAMPLER_ADDRESS_MODE_CLAMP_TO_EDGE address mode. However, if the
coordinates are outside the source region but inside the image level, the
implementation may: clamp coordinates to the source region.

If source and destination extents are identical, no filtering is performed.
Pixels in the axis-aligned region bounded by srcOffsets[0] and srcOffsets[1]
will be copied to the destination region bound by dstOffsets[0] and
dstOffsets[1]. In the case where dstOffsets[0].x > dstOffsets[1].x the
copied pixels are reversed in that direction. Likewise for y and z.

Blits are done layer by layer starting with the pname:baseArrayLayer member
of pname:srcSubresource for the source and pname:dstSubresource for the
destination. pname:layerCount layers are blitted to the destination image.

3D textures are blitted slice by slice. Slices in the source region bounded
by pname:srcOffsets[0].z and pname:srcOffsets[1].z are copied to slices in
the destination region bounded by pname:dstOffsets[0].z and
pname:dstOffsets[1].z. For each destination slice, a source z coordinate is
linearly interpolated between pname:srcOffsets[0].z and
pname:srcOffsets[1].z. If the pname:filter parameter is
ename:VK_FILTER_LINEAR then the value sampled from the source image is taken
by doing linear filtering using the interpolated z coordinate. If
pname:filter parameter is ename:VK_FILTER_NEAREST then value sampled from
the source image is taken from the single nearest slice (with undefined
rounding mode).

The following filtering and conversion rules apply:

  * Integer formats can: only be converted to other integer formats with the
    same signedness.
  * No format conversion is supported between depth/stencil images - the
    formats must: match.
  * Format conversions on unorm, snorm, unscaled and packed float formats of
    the copied aspect of the image are performed by first converting the
    pixels to float values.
  * In case of sRGB source format, nonlinear RGB values are converted to
    linear representation prior to filtering.
  * After filtering, the float values are first clamped and then cast to the
    destination image format. In case of sRGB destination format, linear RGB
    values are converted to nonlinear representation before writing the
    pixel to the image.

Signed and unsigned integers are converted by first clamping to the
representable range of the destination format, then casting the value.

include::../validity/protos/vkCmdBlitImage.txt[]


See Also
--------

slink:VkCommandBuffer, elink:VkFilter, slink:VkImage, slink:VkImageBlit, elink:VkImageLayout


Document Notes
--------------

For more information, see the Vulkan Specification at URL

https://www.khronos.org/registry/vulkan/specs/1.0/xhtml/vkspec.html#vkCmdBlitImage

This page is extracted from the Vulkan Specification.
Fixes and changes should be made to the Specification,not directly.

include::footer.txt[]

