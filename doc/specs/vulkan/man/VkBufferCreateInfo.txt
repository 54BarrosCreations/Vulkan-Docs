// Copyright (c) 2014-2016 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

VkBufferCreateInfo(3)
=====================

Name
----
VkBufferCreateInfo - Structure specifying the parameters of a newly created buffer object.

C Specification
---------------

// refBegin VkBufferCreateInfo Structure specifying the parameters of a newly created buffer object.

The sname:VkBufferCreateInfo structure is defined as:

include::../api/structs/VkBufferCreateInfo.txt[]


Members
-------

  * pname:sType is the type of this structure.
  * pname:pNext is `NULL` or a pointer to an extension-specific structure.
  * pname:flags is a bitmask describing additional parameters of the
    buffer. See elink:VkBufferCreateFlagBits below for a description of the
    supported bits.
  * pname:size is the size in bytes of the buffer to be created.
  * pname:usage is a bitmask describing the allowed usages of the buffer.
    See elink:VkBufferUsageFlagBits below for a description of the supported
    bits.
  * pname:sharingMode is the sharing mode of the buffer when it will be
    accessed by multiple queue families, see elink:VkSharingMode in the
    <<resources-sharing,Resource Sharing>> section below for supported
    values.
  * pname:queueFamilyIndexCount is the number of entries in the
    pname:pQueueFamilyIndices array.
  * pname:pQueueFamilyIndices is a list of queue families that will
    access this buffer (ignored if pname:sharingMode is not
    ename:VK_SHARING_MODE_CONCURRENT).


Description
-----------

Bits which can: be set in pname:usage are:

// refBegin VkBufferUsageFlagBits - Bitmask specifying allowed usage of a buffer
include::../api/enums/VkBufferUsageFlagBits.txt[]

  * ename:VK_BUFFER_USAGE_TRANSFER_SRC_BIT indicates that the buffer can: be
    used as the source of a _transfer command_ (see the definition of
    <<synchronization-transfer,ename:VK_PIPELINE_STAGE_TRANSFER_BIT>>).
  * ename:VK_BUFFER_USAGE_TRANSFER_DST_BIT indicates that the buffer
    can: be used as the destination of a transfer command.
  * ename:VK_BUFFER_USAGE_UNIFORM_TEXEL_BUFFER_BIT indicates that the buffer
    can: be used to create a sname:VkBufferView suitable for occupying a
    sname:VkDescriptorSet slot of type
    ename:VK_DESCRIPTOR_TYPE_UNIFORM_TEXEL_BUFFER.
  * ename:VK_BUFFER_USAGE_STORAGE_TEXEL_BUFFER_BIT indicates that the buffer
    can: be used to create a sname:VkBufferView suitable for occupying a
    sname:VkDescriptorSet slot of type
    ename:VK_DESCRIPTOR_TYPE_STORAGE_TEXEL_BUFFER.
  * ename:VK_BUFFER_USAGE_UNIFORM_BUFFER_BIT indicates that the buffer can:
    be used in a sname:VkDescriptorBufferInfo suitable for occupying a
    sname:VkDescriptorSet slot either of type
    ename:VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER or
    ename:VK_DESCRIPTOR_TYPE_UNIFORM_BUFFER_DYNAMIC.
  * ename:VK_BUFFER_USAGE_STORAGE_BUFFER_BIT indicates that the buffer can:
    be used in a sname:VkDescriptorBufferInfo suitable for occupying a
    sname:VkDescriptorSet slot either of type
    ename:VK_DESCRIPTOR_TYPE_STORAGE_BUFFER or
    ename:VK_DESCRIPTOR_TYPE_STORAGE_BUFFER_DYNAMIC.
  * ename:VK_BUFFER_USAGE_INDEX_BUFFER_BIT indicates that the buffer is
    suitable for passing as the pname:buffer parameter to
    fname:vkCmdBindIndexBuffer.
  * ename:VK_BUFFER_USAGE_VERTEX_BUFFER_BIT indicates that the buffer is
    suitable for passing as an element of the pname:pBuffers array to
    fname:vkCmdBindVertexBuffers.
  * ename:VK_BUFFER_USAGE_INDIRECT_BUFFER_BIT indicates that the buffer is
    suitable for passing as the pname:buffer parameter to
    fname:vkCmdDrawIndirect, fname:vkCmdDrawIndexedIndirect, or
    fname:vkCmdDispatchIndirect.

Any combination of bits can: be specified for pname:usage, but at least one
of the bits must: be set in order to create a valid buffer.

Bits which can: be set in pname:flags are:

// refBegin VkBufferCreateFlagBits - Bitmask specifying additional parameters of a buffer
include::../api/enums/VkBufferCreateFlagBits.txt[]

These bits have the following meanings:

  * ename:VK_BUFFER_CREATE_SPARSE_BINDING_BIT indicates that the buffer will
    be backed using sparse memory binding.
  * ename:VK_BUFFER_CREATE_SPARSE_RESIDENCY_BIT indicates that the buffer
    can: be partially backed using sparse memory binding. Buffers
    created with this flag must: also be created with the
    ename:VK_BUFFER_CREATE_SPARSE_BINDING_BIT flag.
  * ename:VK_BUFFER_CREATE_SPARSE_ALIASED_BIT indicates that the buffer will
    be backed using sparse memory binding with memory ranges that might also
    simultaneously be backing another buffer (or another portion of the same
    buffer). Buffers created with this flag must: also be created
    with the ename:VK_BUFFER_CREATE_SPARSE_BINDING_BIT flag.

See <<sparsememory-sparseresourcefeatures,Sparse Resource Features>> and
<<features-features,Physical Device Features>> for details of the sparse
memory features supported on a device.

include::../validity/structs/VkBufferCreateInfo.txt[]


See Also
--------

elink:VkBufferCreateFlags, elink:VkBufferUsageFlags, basetype:VkDeviceSize, elink:VkSharingMode, elink:VkStructureType, flink:vkCreateBuffer


Document Notes
--------------

For more information, see the Vulkan Specification at URL

https://www.khronos.org/registry/vulkan/specs/1.0/xhtml/vkspec.html#VkBufferCreateInfo

This page is extracted from the Vulkan Specification.
Fixes and changes should be made to the Specification,not directly.

include::footer.txt[]

