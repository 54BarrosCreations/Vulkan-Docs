// Copyright (c) 2014-2016 Khronos Group. This work is licensed under a
// Creative Commons Attribution 4.0 International License; see
// http://creativecommons.org/licenses/by/4.0/

VkPresentModeKHR(3)
===================

Name
----
VkPresentModeKHR - presentation mode supported for a surface

C Specification
---------------

// refBegin VkPresentModeKHR - presentation mode supported for a surface

The definition of ename:VkPresentModeKHR is:

include::../../api/enums/VkPresentModeKHR.txt[]


Description
-----------

  * ename:VK_PRESENT_MODE_IMMEDIATE_KHR: The presentation engine does not
    wait for a vertical blanking period to update the current image, meaning
    this mode may: result in visible tearing. No internal queuing of
    presentation requests is needed, as the requests are applied
    immediately.
  * ename:VK_PRESENT_MODE_MAILBOX_KHR: The presentation engine waits for the
    next vertical blanking period to update the current image. Tearing
    cannot: be observed. An internal single-entry queue is used to hold
    pending presentation requests. If the queue is full when a new
    presentation request is received, the new request replaces the existing
    entry, and any images associated with the prior entry become available
    for re-use by the application. One request is removed from the queue and
    processed during each vertical blanking period in which the queue is
    non-empty.
  * ename:VK_PRESENT_MODE_FIFO_KHR: The presentation engine waits for the
    next vertical blanking period to update the current image. Tearing
    cannot: be observed. An internal queue is used to hold pending
    presentation requests. New requests are appended to the end of the queue,
    and one request is removed from the beginning of the queue and processed
    during each vertical blanking period in which the queue is non-empty.
    This is the only value of pname:presentMode that is required: to be
    supported.
  * ename:VK_PRESENT_MODE_FIFO_RELAXED_KHR: The presentation engine
    generally waits
    for the next vertical blanking period to update the current image. If a
    vertical blanking period has already passed since the last update of the
    current image then the presentation engine does not wait for another
    vertical blanking period for the update, meaning this mode may: result
    in visible tearing in this case. This mode is useful for reducing visual
    stutter with an application that will mostly present a new image before
    the next vertical blanking period, but may occassionally be late, and
    present a new image just after the the next vertical blanking period.
    An internal queue is used to hold pending presentation requests. New
    requests are appended to the end of the queue, and one request is
    removed from the beginning of the queue and processed during or after
    each vertical blanking period in which the queue is non-empty.

[NOTE]
.Note
====
For reference, the mode indicated by ename:VK_PRESENT_MODE_FIFO_KHR is
equivalent to the behavior of {wgl|glX|egl}SwapBuffers with a swap interval
of 1, while the mode indicated by ename:VK_PRESENT_MODE_FIFO_RELAXED_KHR is
equivalent to the behavior of {wgl|glX}SwapBuffers with a swap interval
of -1 (from the {WGL|GLX}_EXT_swap_control_tear extensions).
====

// refEnd VkPresentModeKHR


See Also
--------

slink:VkSwapchainCreateInfoKHR, flink:vkGetPhysicalDeviceSurfacePresentModesKHR


Document Notes
--------------

For more information, see the Vulkan Specification at URL

https://www.khronos.org/registry/vulkan/specs/1.0/xhtml/vkspec.html#VkPresentModeKHR

This page is extracted from the Vulkan Specification.
Fixes and changes should be made to the Specification,not directly.

include::footer.txt[]

